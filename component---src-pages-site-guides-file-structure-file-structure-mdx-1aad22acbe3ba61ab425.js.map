{"version":3,"sources":["webpack:///./src/pages/site-guides/file-structure/file-structure.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","name","lastUpdated","readTimeMinutes","parentName","isMDXComponent"],"mappings":"sQAOaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAgBC,KAAK,gBAAgBC,YAAY,gBAAgBC,gBAAgB,IAAIH,QAAQ,mBAC7F,kCACA,uBACA,sJACF,sBAAQI,WAAW,KAAnB,SADE,uSAGA,kCACA,uBACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,2QAiBL,kCACA,uBACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,8aAkBL,mCACA,sJACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iPAcL,qBAAG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,qDACP,+BAAKA,WAAW,KAAQ,CACvB,IAAO,mEACP,IAAO,YAMjBP,EAAWQ,gBAAiB","file":"component---src-pages-site-guides-file-structure-file-structure-mdx-1aad22acbe3ba61ab425.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/Mark/Documents/GitHub/MCM-Website/cp4mcm-swat-kb/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport ArticleDetails from '../../../components/ArticleDetails';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <ArticleDetails name=\"Mark Leftwich\" lastUpdated=\"Aug 11th 2020\" readTimeMinutes=\"5\" mdxType=\"ArticleDetails\" />\n    <h2>{`Overview`}</h2>\n    <hr></hr>\n    <p>{`This article will show you a few options you can use to build and display file / folder structures in your articles clearly.\n`}<strong parentName=\"p\">{`Note:`}</strong>{` Each example is wrapped in tripple backticks before and after the code. This will keep the file structure formatted correctly when published.\nThe backticks also allow the website to trim what is shown and provide a dropdown feature. This is helpful if large structure/trees are being used.`}</p>\n    <h2>{`Option 1`}</h2>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{}}>{`IBM Project\n│   README.md\n│   file001.txt    \n│\n└───folder1\n│   │   file011.txt\n│   │   file012.txt\n│   │\n│   └───subfolder1\n│       │   file111.txt\n│       │   file112.txt\n│       │   ...\n│   \n└───folder2\n    │   file021.txt\n    │   file022.txt\n`}</code></pre>\n    <h2>{`Option 2`}</h2>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{}}>{`├── _config.yml\n├── _drafts\n│   ├── begin-with-the-crazy-ideas.textile\n│   └── on-simplicity-in-technology.markdown\n├── _includes\n│   ├── footer.html\n│   └── header.html\n├── _layouts\n│   ├── default.html\n│   └── post.html\n├── _posts\n│   ├── 2007-10-29-why-every-programmer-should-play-nethack.textile\n│   └── 2009-04-26-barcamp-boston-4-roundup.textile\n├── _data\n│   └── members.yml\n├── _site\n└── index.html\n`}</code></pre>\n    <h2>{`Option 3:`}</h2>\n    <p>{`This is not the cleanest looking, but if you are concerned about Unicode characters you can use ASCII to build the structures`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`.\n+-- _Folder 1\n+-- _Folder 2\n|   +-- File_name_1.txt\n|   +-- IBM_example_file.markdown\n+-- _Folder 3\n|   +-- footer.html\n|   +-- header.html\n+-- _Folder 4\n|   +-- default.html\n|   +-- post.html\n+-- Folder 5\n+-- index.html\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://ibmintegration.github.io/cp4mcm-swat-kb/\"\n      }}><img parentName=\"a\" {...{\n          \"src\": \"/cp4mcm-swat-kb/5f04418d6388576950618f37a74277c4/SWAT_Header.gif\",\n          \"alt\": \"MCM\"\n        }}></img></a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}