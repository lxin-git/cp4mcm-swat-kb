{"expireTime":9007200851618520000,"key":"gatsby-plugin-mdx-entire-payload-9a0eeefe7d515669e4ca3a323d53060e-","val":{"mdast":{"type":"root","children":[{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://downloads.asperasoft.com/en/downloads/1","children":[{"type":"text","value":"Download","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":13,"offset":13},"indent":[]}}],"position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":63,"offset":63},"indent":[]}},{"type":"text","value":" and install Aspera High\nSpeed Transfer Server (HSTS)","position":{"start":{"line":2,"column":63,"offset":63},"end":{"line":3,"column":32,"offset":119},"indent":[4]}}],"position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":3,"column":32,"offset":119},"indent":[4]}},{"type":"code","lang":"bash","meta":null,"value":" rpm -Uvh /path_to_installer/${aspera-hsts-version}.rpm --no-deps","position":{"start":{"line":5,"column":4,"offset":124},"end":{"line":7,"column":7,"offset":207},"indent":[4,4]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":8,"column":1,"offset":208},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Edit the servers SSHD config to support Aspera's default SSH port 33001","position":{"start":{"line":9,"column":4,"offset":212},"end":{"line":9,"column":75,"offset":283},"indent":[]}}],"position":{"start":{"line":9,"column":4,"offset":212},"end":{"line":9,"column":75,"offset":283},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":" # Open the file for editing\n vi /etc/ssh/sshd_config\n\n # Add the TCP/33001 SSH port and comment out existing config for TCP/22.\n #Port 22\n Port 33001","position":{"start":{"line":11,"column":4,"offset":288},"end":{"line":18,"column":7,"offset":468},"indent":[4,4,1,4,4,4,4]}},{"type":"paragraph","children":[{"type":"text","value":"Restart the SSHD service ","position":{"start":{"line":20,"column":4,"offset":473},"end":{"line":20,"column":29,"offset":498},"indent":[]}},{"type":"inlineCode","value":"systemctl restart sshd","position":{"start":{"line":20,"column":29,"offset":498},"end":{"line":20,"column":53,"offset":522},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":473},"end":{"line":20,"column":53,"offset":522},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":209},"end":{"line":21,"column":1,"offset":523},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Disable Firewalld.","position":{"start":{"line":22,"column":4,"offset":527},"end":{"line":22,"column":22,"offset":545},"indent":[]}}],"position":{"start":{"line":22,"column":4,"offset":527},"end":{"line":22,"column":22,"offset":545},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note: If you do not want to disable the Firewall please read about the\n","position":{"start":{"line":24,"column":4,"offset":550},"end":{"line":25,"column":4,"offset":624},"indent":[4]}},{"type":"link","title":null,"url":"https://www.ibm.com/support/knowledgecenter/en/SSL85S_3.9.6/hsts_admin_linux/dita/hsts_admin_linux_configuring_the_firewall.html","children":[{"type":"text","value":"required firewall configuration","position":{"start":{"line":25,"column":5,"offset":625},"end":{"line":25,"column":36,"offset":656},"indent":[]}}],"position":{"start":{"line":25,"column":4,"offset":624},"end":{"line":25,"column":167,"offset":787},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":25,"column":167,"offset":787},"end":{"line":25,"column":168,"offset":788},"indent":[]}}],"position":{"start":{"line":24,"column":4,"offset":550},"end":{"line":25,"column":168,"offset":788},"indent":[4]}},{"type":"code","lang":"bash","meta":null,"value":" # Stop FirewallD\n systemctl stop firewalld\n\n # Disable FirewallD\n systemctl disable firewalld","position":{"start":{"line":27,"column":4,"offset":793},"end":{"line":33,"column":7,"offset":914},"indent":[4,4,1,4,4,4]}}],"position":{"start":{"line":22,"column":1,"offset":524},"end":{"line":34,"column":1,"offset":915},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"License HSTS by creating the ","position":{"start":{"line":35,"column":4,"offset":919},"end":{"line":35,"column":33,"offset":948},"indent":[]}},{"type":"inlineCode","value":"aspera-license","position":{"start":{"line":35,"column":33,"offset":948},"end":{"line":35,"column":49,"offset":964},"indent":[]}},{"type":"text","value":" file and pasting the license text as the\nfile contents.","position":{"start":{"line":35,"column":49,"offset":964},"end":{"line":36,"column":18,"offset":1023},"indent":[4]}}],"position":{"start":{"line":35,"column":4,"offset":919},"end":{"line":36,"column":18,"offset":1023},"indent":[4]}},{"type":"code","lang":"bash","meta":null,"value":" vi /opt/aspera/etc/aspera-license","position":{"start":{"line":38,"column":4,"offset":1028},"end":{"line":40,"column":7,"offset":1080},"indent":[4,4]}}],"position":{"start":{"line":35,"column":1,"offset":916},"end":{"line":41,"column":1,"offset":1081},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create a new local user that will be used by the client to authenticate to this server.","position":{"start":{"line":42,"column":4,"offset":1085},"end":{"line":42,"column":91,"offset":1172},"indent":[]}}],"position":{"start":{"line":42,"column":4,"offset":1085},"end":{"line":42,"column":91,"offset":1172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note: Instructions are available for setting up SSH key based auth in the optional\nsection of this guide.","position":{"start":{"line":44,"column":4,"offset":1177},"end":{"line":45,"column":26,"offset":1285},"indent":[4]}}],"position":{"start":{"line":44,"column":4,"offset":1177},"end":{"line":45,"column":26,"offset":1285},"indent":[4]}},{"type":"code","lang":"bash","meta":null,"value":" useradd -m -s /bin/aspshell asp1\n passwd asp1","position":{"start":{"line":47,"column":4,"offset":1290},"end":{"line":50,"column":7,"offset":1357},"indent":[4,4,4]}}],"position":{"start":{"line":42,"column":1,"offset":1082},"end":{"line":51,"column":1,"offset":1358},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create a directory that will act as the root directory for file transfers initiated by\nthe ","position":{"start":{"line":52,"column":4,"offset":1362},"end":{"line":53,"column":8,"offset":1456},"indent":[4]}},{"type":"inlineCode","value":"asp1","position":{"start":{"line":53,"column":8,"offset":1456},"end":{"line":53,"column":14,"offset":1462},"indent":[]}},{"type":"text","value":" user.","position":{"start":{"line":53,"column":14,"offset":1462},"end":{"line":53,"column":20,"offset":1468},"indent":[]}}],"position":{"start":{"line":52,"column":4,"offset":1362},"end":{"line":53,"column":20,"offset":1468},"indent":[4]}},{"type":"code","lang":"bash","meta":null,"value":" # Create the directory\n mkdir -p /AsperaRootDir/asp1\n\n # Update permissions on the directory\n chown asp1:asp1 /AsperaRootDir/asp1","position":{"start":{"line":55,"column":4,"offset":1473},"end":{"line":61,"column":7,"offset":1630},"indent":[4,4,1,4,4,4]}}],"position":{"start":{"line":52,"column":1,"offset":1359},"end":{"line":62,"column":1,"offset":1631},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create default global transfer settings. These settings will be used when a user has\nsuccessfully authenticated to the server but specific settings for the session are not\npresent. Navigate to ","position":{"start":{"line":63,"column":4,"offset":1635},"end":{"line":65,"column":25,"offset":1834},"indent":[4,4]}},{"type":"inlineCode","value":"/opt/aspera/bin","position":{"start":{"line":65,"column":25,"offset":1834},"end":{"line":65,"column":42,"offset":1851},"indent":[]}},{"type":"text","value":" and execute the following:","position":{"start":{"line":65,"column":42,"offset":1851},"end":{"line":65,"column":69,"offset":1878},"indent":[]}}],"position":{"start":{"line":63,"column":4,"offset":1635},"end":{"line":65,"column":69,"offset":1878},"indent":[4,4]}},{"type":"code","lang":"bash","meta":null,"value":" ./asconfigurator -x \"set_node_data;authorization_transfer_in_value,deny\"\n ./asconfigurator -x \"set_node_data;authorization_transfer_out_value,deny\"\n ./asconfigurator -x \"set_node_data;token_encryption_key,THIS_IS_THE_TOKEN_KEY\"\n ./asconfigurator -x \"set_node_data;absolute,/AsperaRootDir\"\n ./asconfigurator -x \"set_node_data;read_allowed,false;write_allowed,false;dir_allowed,false\"\n","position":{"start":{"line":67,"column":4,"offset":1883},"end":{"line":74,"column":7,"offset":2297},"indent":[4,4,4,4,4,1,4]}}],"position":{"start":{"line":63,"column":1,"offset":1632},"end":{"line":75,"column":1,"offset":2298},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create user specific transfer settings for the ","position":{"start":{"line":76,"column":4,"offset":2302},"end":{"line":76,"column":51,"offset":2349},"indent":[]}},{"type":"inlineCode","value":"asp1","position":{"start":{"line":76,"column":51,"offset":2349},"end":{"line":76,"column":57,"offset":2355},"indent":[]}},{"type":"text","value":" user that the client will use to\nconnect to the server. These settings have a higher priority than the default settings\npreviously configured. Navigate to ","position":{"start":{"line":76,"column":57,"offset":2355},"end":{"line":78,"column":39,"offset":2517},"indent":[4,4]}},{"type":"inlineCode","value":"/opt/aspera/bin","position":{"start":{"line":78,"column":39,"offset":2517},"end":{"line":78,"column":56,"offset":2534},"indent":[]}},{"type":"text","value":" and execute the following:","position":{"start":{"line":78,"column":56,"offset":2534},"end":{"line":78,"column":83,"offset":2561},"indent":[]}}],"position":{"start":{"line":76,"column":4,"offset":2302},"end":{"line":78,"column":83,"offset":2561},"indent":[4,4]}},{"type":"code","lang":"bash","meta":null,"value":" ./asconfigurator -x \"set_user_data;user_name,asp1;authorization_transfer_in_value,allow\"\n ./asconfigurator -x \"set_user_data;user_name,asp1;authorization_transfer_out_value,allow\"\n\n # When the asp1 user logs in their root directory will be this directory\n ./asconfigurator -x \"set_user_data;user_name,asp1;absolute,/AsperaRootDir/asp1\"\n\n # Target rates are measured in Kbps. The below sets the target rate to 100Mbps\n ./asconfigurator -x \"set_user_data;user_name,asp1;transfer_in_bandwidth_flow_target_rate_default,100000\"\n ./asconfigurator -x \"set_user_data;user_name,asp1;transfer_out_bandwidth_flow_target_rate_default,100000\"","position":{"start":{"line":80,"column":4,"offset":2566},"end":{"line":90,"column":7,"offset":3232},"indent":[4,4,1,4,4,1,4,4,4,4]}},{"type":"paragraph","children":[{"type":"text","value":"Note: Each of these commands are updating the Aspera XML config file located at\n","position":{"start":{"line":92,"column":4,"offset":3237},"end":{"line":93,"column":4,"offset":3320},"indent":[4]}},{"type":"inlineCode","value":"/opt/aspera/etc/aspera.conf","position":{"start":{"line":93,"column":4,"offset":3320},"end":{"line":93,"column":33,"offset":3349},"indent":[]}},{"type":"text","value":". If you have manually updated any of these settings you\ncheck the validity of the file with ","position":{"start":{"line":93,"column":33,"offset":3349},"end":{"line":94,"column":40,"offset":3445},"indent":[4]}},{"type":"inlineCode","value":"/opt/aspera/bin/asuserdata -v","position":{"start":{"line":94,"column":40,"offset":3445},"end":{"line":94,"column":71,"offset":3476},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":94,"column":71,"offset":3476},"end":{"line":94,"column":72,"offset":3477},"indent":[]}}],"position":{"start":{"line":92,"column":4,"offset":3237},"end":{"line":94,"column":72,"offset":3477},"indent":[4,4]}}],"position":{"start":{"line":76,"column":1,"offset":2299},"end":{"line":94,"column":72,"offset":3477},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":94,"column":72,"offset":3477},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The Server is now ready to receive connections from the Client.","position":{"start":{"line":96,"column":1,"offset":3479},"end":{"line":96,"column":64,"offset":3542},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3479},"end":{"line":96,"column":64,"offset":3542},"indent":[]}},{"type":"export","default":true,"value":"export default ({children}) => <div className=\"accordion-list\">{children}</div\n>","position":{"start":{"line":98,"column":1,"offset":3544},"end":{"line":99,"column":2,"offset":3624},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Server Configuration\",\"hiddenFromSearch\":true}","position":{"start":{"line":102,"column":1,"offset":3627},"end":{"line":102,"column":85,"offset":3711},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":102,"column":85,"offset":3711}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Server Configuration\",\n  \"hiddenFromSearch\": true\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = ({children}) => <div className=\"accordion-list\">{children}</div\n>\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://downloads.asperasoft.com/en/downloads/1\"\n          }}>{`Download`}</a>{` and install Aspera High\nSpeed Transfer Server (HSTS)`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` rpm -Uvh /path_to_installer/\\${aspera-hsts-version}.rpm --no-deps\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Edit the servers SSHD config to support Aspera’s default SSH port 33001`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` # Open the file for editing\n vi /etc/ssh/sshd_config\n\n # Add the TCP/33001 SSH port and comment out existing config for TCP/22.\n #Port 22\n Port 33001\n`}</code></pre>\n        <p parentName=\"li\">{`Restart the SSHD service `}<inlineCode parentName=\"p\">{`systemctl restart sshd`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Disable Firewalld.`}</p>\n        <p parentName=\"li\">{`Note: If you do not want to disable the Firewall please read about the\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://www.ibm.com/support/knowledgecenter/en/SSL85S_3.9.6/hsts_admin_linux/dita/hsts_admin_linux_configuring_the_firewall.html\"\n          }}>{`required firewall configuration`}</a>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` # Stop FirewallD\n systemctl stop firewalld\n\n # Disable FirewallD\n systemctl disable firewalld\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`License HSTS by creating the `}<inlineCode parentName=\"p\">{`aspera-license`}</inlineCode>{` file and pasting the license text as the\nfile contents.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` vi /opt/aspera/etc/aspera-license\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a new local user that will be used by the client to authenticate to this server.`}</p>\n        <p parentName=\"li\">{`Note: Instructions are available for setting up SSH key based auth in the optional\nsection of this guide.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` useradd -m -s /bin/aspshell asp1\n passwd asp1\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a directory that will act as the root directory for file transfers initiated by\nthe `}<inlineCode parentName=\"p\">{`asp1`}</inlineCode>{` user.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` # Create the directory\n mkdir -p /AsperaRootDir/asp1\n\n # Update permissions on the directory\n chown asp1:asp1 /AsperaRootDir/asp1\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create default global transfer settings. These settings will be used when a user has\nsuccessfully authenticated to the server but specific settings for the session are not\npresent. Navigate to `}<inlineCode parentName=\"p\">{`/opt/aspera/bin`}</inlineCode>{` and execute the following:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` ./asconfigurator -x \"set_node_data;authorization_transfer_in_value,deny\"\n ./asconfigurator -x \"set_node_data;authorization_transfer_out_value,deny\"\n ./asconfigurator -x \"set_node_data;token_encryption_key,THIS_IS_THE_TOKEN_KEY\"\n ./asconfigurator -x \"set_node_data;absolute,/AsperaRootDir\"\n ./asconfigurator -x \"set_node_data;read_allowed,false;write_allowed,false;dir_allowed,false\"\n\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create user specific transfer settings for the `}<inlineCode parentName=\"p\">{`asp1`}</inlineCode>{` user that the client will use to\nconnect to the server. These settings have a higher priority than the default settings\npreviously configured. Navigate to `}<inlineCode parentName=\"p\">{`/opt/aspera/bin`}</inlineCode>{` and execute the following:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` ./asconfigurator -x \"set_user_data;user_name,asp1;authorization_transfer_in_value,allow\"\n ./asconfigurator -x \"set_user_data;user_name,asp1;authorization_transfer_out_value,allow\"\n\n # When the asp1 user logs in their root directory will be this directory\n ./asconfigurator -x \"set_user_data;user_name,asp1;absolute,/AsperaRootDir/asp1\"\n\n # Target rates are measured in Kbps. The below sets the target rate to 100Mbps\n ./asconfigurator -x \"set_user_data;user_name,asp1;transfer_in_bandwidth_flow_target_rate_default,100000\"\n ./asconfigurator -x \"set_user_data;user_name,asp1;transfer_out_bandwidth_flow_target_rate_default,100000\"\n`}</code></pre>\n        <p parentName=\"li\">{`Note: Each of these commands are updating the Aspera XML config file located at\n`}<inlineCode parentName=\"p\">{`/opt/aspera/etc/aspera.conf`}</inlineCode>{`. If you have manually updated any of these settings you\ncheck the validity of the file with `}<inlineCode parentName=\"p\">{`/opt/aspera/bin/asuserdata -v`}</inlineCode>{`.`}</p>\n      </li>\n    </ol>\n    <p>{`The Server is now ready to receive connections from the Client.`}</p>\n\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}