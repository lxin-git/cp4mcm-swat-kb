{"version":3,"sources":["webpack:///./src/pages/general-guides/wildcard-ssl-cert-lets-encrypt/wildcard-ssl-cert-lets-encrypt.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","name","lastUpdated","readTimeMinutes","isMDXComponent"],"mappings":"oQAOaA,G,UAAe,IAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,YAAC,IAAD,CAAgBC,KAAK,WAAWC,YAAY,aAAaC,gBAAgB,IAAIH,QAAQ,mBACrF,uHAEA,sBAEE,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,iGAMA,kBAAS,CACP,WAAc,MACb,mBAAU,CACT,UAAa,gBACb,WAAc,OAFf,mIAaL,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,oBAGE,yBAAgB,CACd,WAAc,KADhB,kCAOJ,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,6GAMA,kBAAS,CACP,WAAc,MACb,mBAAU,CACT,UAAa,cACb,WAAc,OAFf,kMAcL,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,wIAMA,gBAAO,CACL,WAAc,MADhB,wFAOJ,mCACA,+EACE,yBAAgB,CACd,WAAc,KADhB,mCADF,gBAMA,8IAEA,uBAAK,mBAAU,CACX,UAAa,gBACb,WAAc,OAFb,0HASTH,EAAWO,gBAAiB","file":"component---src-pages-general-guides-wildcard-ssl-cert-lets-encrypt-wildcard-ssl-cert-lets-encrypt-mdx-aaba77a864c253ff5970.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/asim/MCM/learning-site/local-test-only-branch/cp4mcm-swat-kb/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport ArticleDetails from '../../../components/ArticleDetails';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <ArticleDetails name=\"Ryan Hay\" lastUpdated=\"April 20th\" readTimeMinutes=\"1\" mdxType=\"ArticleDetails\" />\n    <p>{`Let’s Encrypt can be used to create a free Wilcard certificate for a domain that you\ncontrol.`}</p>\n    <ol>\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Download ‘Certbot’. You can download the latest release with wget or clone the Certbot\nrepo.`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-bash\",\n            \"parentName\": \"pre\"\n          }}>{`wget https://dl.eff.org/certbot-auto\\` & \\`chmod a+x certbot-auto\n\n# OR\n\ngit clone https://github.com/certbot/certbot.git\n`}</code></pre>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Install Certbot: `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`cd certbot && ./certbot-auto`}</inlineCode></p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Generate cert. For example the following can be run to generate a Wildcard cert for the\ndomain cp4i.com:`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-sh\",\n            \"parentName\": \"pre\"\n          }}>{`./certbot-auto certonly \\\\\n--manual \\\\\n--preferred-challenges=dns \\\\\n--email ryan@example.com \\\\\n--server https://acme-v02.api.letsencrypt.org/directory --agree-tos \\\\\n-d *.cp4i.com\n`}</code></pre>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Set up a DNS TXT entry as per instructions provided from certbot-auto and continue the\nexecution of ‘certbot-auto’ once configured.`}</p>\n\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Note: Setting up a DNS TXT entry will be slightly different for each DNS provider.`}</p>\n\n      </li>\n\n    </ol>\n    <h3>{`That’s it`}</h3>\n    <p>{`Let’s Encrypt will place the certificate assets in the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`/etc/letsencrypt/live/\"$domain\"`}</inlineCode>\n      {`\ndirectory.`}</p>\n    <p>{`Note: It is common to want to apply this certificate to a Proxy like HAProxy or NGINX. To\ndo this create a PEM file:`}</p>\n    <pre><code {...{\n        \"className\": \"language-bash\",\n        \"parentName\": \"pre\"\n      }}>{`cat /etc/letsencrypt/live/\\${domain}/fullchain.pem /etc/letsencrypt/live/\\${domain}/privkey.pem > /tmp/\\${domain}.pem\n`}</code></pre>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}